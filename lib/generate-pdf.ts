import jsPDF from "jspdf";

export const generatePDF = (
  session: { topic?: string } | null,
  htmlContent: string
) => {
  const pdf = new jsPDF("p", "mm", "a4");
  const pageWidth = pdf.internal.pageSize.getWidth();
  let y = 20;

  // Title
  pdf.setFont("helvetica", "bold");
  pdf.setFontSize(20);
  pdf.text(session?.topic || "Research Report", pageWidth / 2, y, { align: "center" });
  y += 10;

  pdf.setFont("helvetica", "normal");
  pdf.setFontSize(10);
  pdf.text(`Generated on ${new Date().toLocaleDateString()}`, pageWidth / 2, y, { align: "center" });
  y += 10;

  pdf.line(20, y, pageWidth - 20, y);
  y += 10;

  pdf.setFont("helvetica", "bold");
  pdf.setFontSize(14);
  pdf.text("Research Document", 20, y);
  y += 10;

  // --- Simple HTML parser ---
  const container = document.createElement("div");
  container.innerHTML = htmlContent || "No content";

  const renderNode = (node: ChildNode) => {
    if (node.nodeType === Node.TEXT_NODE) {
      const text = node.textContent?.trim();
      if (text) {
        pdf.text(text, 20, y, { maxWidth: pageWidth - 40 });
        y += 7;
      }
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      const el = node as HTMLElement;
      switch (el.tagName.toLowerCase()) {
        case "br":
          y += 7;
          break;
        case "b":
        case "strong":
          pdf.setFont("helvetica", "bold");
          el.childNodes.forEach(renderNode);
          pdf.setFont("helvetica", "normal");
          break;
        case "i":
        case "em":
          pdf.setFont("helvetica", "italic");
          el.childNodes.forEach(renderNode);
          pdf.setFont("helvetica", "normal");
          break;
        case "img":
          const src = el.getAttribute("src");
          if (src && src.startsWith("data:image/")) {
            const ratio = 1;
            const width = pageWidth - 40;
            const height = width * ratio;
            pdf.addImage(src, "JPEG", 20, y, width, height);
            y += height + 5;
          }
          break;
        default:
          el.childNodes.forEach(renderNode);
      }
    }
  };

  container.childNodes.forEach(renderNode);

  // Footer
  pdf.setFontSize(9);
  pdf.text("Generated by Research Assistant", pageWidth / 2, 285, { align: "center" });

  // Save PDF
  pdf.save(`${(session?.topic || "research_report").replace(/[^a-z0-9]/gi, "_")}.pdf`);
};
